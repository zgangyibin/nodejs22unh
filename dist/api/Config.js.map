{"version":3,"sources":["../../src/api/Config.js"],"names":["config","db","api","get","req","res","page","parseInt","query","limit","sort","order","where","name","Op","like","ConfigModel","findAndCountAll","offset","result","currPage","pageSize","toRes","session","post","update","body","id","findOne","params","record"],"mappings":"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","file":"Config.js","sourcesContent":["import { Router } from 'express'\nimport { Op } from 'sequelize'\nimport toRes from '../lib/toRes'\nimport ConfigModel from '../models/ConfigModel'\n\nexport default ({ config, db }) => {\n\tlet api = Router()\n\n\t// 分页接口（后端）\n\tapi.get('/page', async (req, res) => {\n\n\t\ttry {\n\n\t\t\tlet page = parseInt(req.query.page) || 1\n\t\t\tlet limit = parseInt(req.query.limit) || 10\n\t\t\tlet sort = req.query.sort || 'id'\n\t\t\tlet order = req.query.order || 'asc'\n\n\t\t\tlet where = {}\n\n\t\t\tlet name = req.query.name\n\t\t\tif (name) {\n\t\t\t\twhere.name = {\n\t\t\t\t\t[Op.like]: '%' + name + '%'\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet result = await ConfigModel.findAndCountAll({\n\t\t\t\torder: [[sort, order]],\n\t\t\t\twhere,\n\t\t\t\toffset: (page - 1) * limit,\n\t\t\t\tlimit\n\t\t\t})\n\t\t\t\n\t\t\tresult.currPage = page\n\t\t\tresult.pageSize = limit\n\n\t\t\ttoRes.page(res, 0, result)\n\t\t} catch(err) {\n\t\t\t\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\n\t\t}\n\t})\n\n\t// 分页接口（前端）\n\tapi.get('/list', async (req, res) => {\n\n\t\ttry {\n\n\t\t\tlet page = parseInt(req.query.page) || 1\n\t\t\tlet limit = parseInt(req.query.limit) || 10\n\t\t\tlet sort = req.query.sort || 'id'\n\t\t\tlet order = req.query.order || 'asc'\n\n\t\t\tlet where = {}\n\n\t\t\tlet name = req.query.name\n\t\t\tif (name) {\n\t\t\t\twhere.name = {\n\t\t\t\t\t[Op.like]: '%' + name + '%'\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet result = await ConfigModel.findAndCountAll({\n\t\t\t\torder: [[sort, order]],\n\t\t\t\twhere,\n\t\t\t\toffset: (page - 1) * limit,\n\t\t\t\tlimit\n\t\t\t})\n\t\t\t\n\t\t\tresult.currPage = page\n\t\t\tresult.pageSize = limit\n\n\t\t\ttoRes.page(res, 0, result)\n\t\t} catch(err) {\n\t\t\t\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\n\t\t}\n\t})\n\n\t// 更新接口\n\tapi.post('/update', async (req, res) => {\n\n\t\ttry {\n\n\t\t\tawait ConfigModel.update(req.body, {\n\t\t\t\twhere: {\n\t\t\t\t  id: req.body.id\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttoRes.session(res, 0, '编辑成功！')\n\t\t} catch(err) {\n\t\t\t\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\n\t\t}\n\t})\n\n\t// 详情接口\n\tapi.get('/info/:id', async (req, res) => {\n\n\t\ttry {\n\n\t\t\ttoRes.record(res, 0, await ConfigModel.findOne({ where: { id: req.params.id } }))\n\t\t} catch(err) {\n\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\n\t\t}\n\t})\n\n\t// 配置获取接口（后端）\n\tapi.get('/info', async (req, res) => {\n\n\t\ttry {\n\n\t\t\ttoRes.record(res, 0, await ConfigModel.findOne({ where: { name: req.query.name } }))\n\t\t} catch(err) {\n\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\n\t\t}\n\t})\n\n\t// 配置获取接口（前端）\n\tapi.get('/detail', async (req, res) => {\n\n\t\ttry {\n\n\t\t\ttoRes.record(res, 0, await ConfigModel.findOne({ where: { name: req.query.name } }))\n\t\t} catch(err) {\n\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\n\t\t}\n\t})\n\n\treturn api\n}\n"]}