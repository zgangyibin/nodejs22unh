{"version":3,"sources":["../../../../../../../src/views/front/components/zebra-swiper/libs/update/updateAutoHeight.js"],"names":["speed","swiper","activeSlides","isVirtual","virtual","params","enabled","newHeight","i","setTransition","getSlideByIndex","slides","filter","parseInt","el","getAttribute","index","slidesPerView","centeredSlides","visibleSlides","each","push","slide","Math","ceil","activeIndex","length","getHeight","height","$wrapperEl","css","updateAutoHeight"],"mappings":";;;;;;;;;;;;;;;;;qFAAe,iBAAgCA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,YADQ,GACC,IADD;AAERC,kBAFQ,GAEO,EAFP;AAGRC,eAHQ,GAGIF,OAAOG,OAAP,IAAkBH,OAAOI,MAAP,CAAcD,OAAd,CAAsBE,OAH5C;AAIVC,eAJU,GAIE,CAJF;AAKVC,OALU;;;AAOd,UAAI,OAAOR,KAAP,KAAiB,QAArB,EAA+B;AAC9BC,cAAOQ,aAAP,CAAqBT,KAArB;AACA,OAFD,MAEO,IAAIA,UAAU,IAAd,EAAoB;AAC1BC,cAAOQ,aAAP,CAAqBR,OAAOI,MAAP,CAAcL,KAAnC;AACA;;AAEKU,qBAbQ,GAaU,SAAlBA,eAAkB,QAAS;AAChC,WAAIP,SAAJ,EAAe;AACd,eAAOF,OAAOU,MAAP,CAAcC,MAAd,CAAqB;AAAA,gBAAMC,SAASC,GAAGC,YAAH,CAAgB,yBAAhB,CAAT,EAAqD,EAArD,MACjCC,KAD2B;AAAA,SAArB,EAEN,CAFM,CAAP;AAGA;;AAED,cAAOf,OAAOU,MAAP,CAAcK,KAAd,CAAP;AACA,OArBa,EAqBX;;AArBW,YAuBVf,OAAOI,MAAP,CAAcY,aAAd,KAAgC,MAAhC,IAA0ChB,OAAOI,MAAP,CAAcY,aAAd,GAA8B,CAvB9D;AAAA;AAAA;AAAA;;AAAA,WAwBThB,OAAOI,MAAP,CAAca,cAxBL;AAAA;AAAA;AAAA;;AAyBZjB,aAAOkB,aAAP,CAAqBC,IAArB,CAA0B,iBAAS;AAClClB,oBAAamB,IAAb,CAAkBC,KAAlB;AACA,OAFD;AAzBY;AAAA;;AAAA;AA6BPd,UAAI,CA7BG;;AAAA;AAAA,YA6BAA,IAAIe,KAAKC,IAAL,CAAUvB,OAAOI,MAAP,CAAcY,aAAxB,CA7BJ;AAAA;AAAA;AAAA;;AA8BLD,WA9BK,GA8BGf,OAAOwB,WAAP,GAAqBjB,CA9BxB;;AAAA,YA+BPQ,QAAQf,OAAOU,MAAP,CAAce,MAAtB,IAAgC,CAACvB,SA/B1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAgCXD,mBAAamB,IAAb,CAAkBX,gBAAgBM,KAAhB,CAAlB;;AAhCW;AA6B4CR,WAAK,CA7BjD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAoCbN,mBAAamB,IAAb,CAAkBX,gBAAgBT,OAAOwB,WAAvB,CAAlB;;AApCa;AAwCTjB,UAAI,CAxCK;;AAAA;AAAA,YAwCFA,IAAIN,aAAawB,MAxCf;AAAA;AAAA;AAAA;;AAAA,YAyCT,OAAOxB,aAAaM,CAAb,CAAP,KAA2B,WAzClB;AAAA;AAAA;AAAA;;AAAA;AAAA,aA0CSN,aAAaM,CAAb,EAAgBmB,SAAhB,EA1CT;;AAAA;AA0CNC,YA1CM;;AA2CZrB,kBAAYqB,SAASrB,SAAT,GAAqBqB,MAArB,GAA8BrB,SAA1C;;AA3CY;AAwCuBC,WAAK,CAxC5B;AAAA;AAAA;;AAAA;AA6CZ;;;AAGF,UAAID,aAAaA,cAAc,CAA/B,EAAkCN,OAAO4B,UAAP,CAAkBC,GAAlB,CAAsB;AACvDF,gBAAWrB,YAAUA,SAAV,GAAoB,EAA/B;AADuD,OAAtB;;AAhDpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,E;;UAAewB,gB;;;;QAAAA,gB","file":"updateAutoHeight.js","sourcesContent":["export default async function updateAutoHeight(speed) {\r\n\tconst swiper = this;\r\n\tconst activeSlides = [];\r\n\tconst isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n\tlet newHeight = 0;\r\n\tlet i;\r\n\r\n\tif (typeof speed === 'number') {\r\n\t\tswiper.setTransition(speed);\r\n\t} else if (speed === true) {\r\n\t\tswiper.setTransition(swiper.params.speed);\r\n\t}\r\n\r\n\tconst getSlideByIndex = index => {\r\n\t\tif (isVirtual) {\r\n\t\t\treturn swiper.slides.filter(el => parseInt(el.getAttribute('data-swiper-slide-index'), 10) ===\r\n\t\t\t\tindex)[\r\n\t\t\t\t0];\r\n\t\t}\r\n\r\n\t\treturn swiper.slides[index];\r\n\t}; // Find slides currently in view\r\n\r\n\tif (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\r\n\t\tif (swiper.params.centeredSlides) {\r\n\t\t\tswiper.visibleSlides.each(slide => {\r\n\t\t\t\tactiveSlides.push(slide);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tfor (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\r\n\t\t\t\tconst index = swiper.activeIndex + i;\r\n\t\t\t\tif (index > swiper.slides.length && !isVirtual) break;\r\n\t\t\t\tactiveSlides.push(getSlideByIndex(index));\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tactiveSlides.push(getSlideByIndex(swiper.activeIndex));\r\n\t} // Find new height from highest slide in view\r\n\r\n\r\n\tfor (i = 0; i < activeSlides.length; i += 1) {\r\n\t\tif (typeof activeSlides[i] !== 'undefined') {\r\n\t\t\tconst height = await activeSlides[i].getHeight();\r\n\t\t\tnewHeight = height > newHeight ? height : newHeight;\r\n\t\t}\r\n\t} // Update Height\r\n\r\n\r\n\tif (newHeight || newHeight === 0) swiper.$wrapperEl.css({\r\n\t\theight: `${newHeight?newHeight:''}px`\r\n\t});\r\n}\n"]}