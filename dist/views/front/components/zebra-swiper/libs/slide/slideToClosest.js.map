{"version":3,"sources":["../../../../../../../src/views/front/components/zebra-swiper/libs/slide/slideToClosest.js"],"names":["slideToClosest","speed","params","runCallbacks","internal","threshold","swiper","index","activeIndex","skip","Math","min","slidesPerGroupSkip","snapIndex","floor","slidesPerGroup","translate","rtlTranslate","snapGrid","currentSnap","nextSnap","prevSnap","max","slidesGrid","length","slideTo"],"mappings":";;;;;kBACwBA,c;AADxB;AACe,SAASA,cAAT,GAAmG;AAAA,MAA3EC,KAA2E,uEAAnE,KAAKC,MAAL,CAAYD,KAAuD;AAAA,MAAhDE,YAAgD,uEAAjC,IAAiC;AAAA,MAA3BC,QAA2B;AAAA,MAAjBC,SAAiB,uEAAL,GAAK;;AAChH,MAAMC,SAAS,IAAf;AACA,MAAIC,QAAQD,OAAOE,WAAnB;AACA,MAAMC,OAAOC,KAAKC,GAAL,CAASL,OAAOJ,MAAP,CAAcU,kBAAvB,EAA2CL,KAA3C,CAAb;AACA,MAAMM,YAAYJ,OAAOC,KAAKI,KAAL,CAAW,CAACP,QAAQE,IAAT,IAAiBH,OAAOJ,MAAP,CAAca,cAA1C,CAAzB;AACA,MAAMC,YAAYV,OAAOW,YAAP,GAAsBX,OAAOU,SAA7B,GAAyC,CAACV,OAAOU,SAAnE;;AAEA,MAAIA,aAAaV,OAAOY,QAAP,CAAgBL,SAAhB,CAAjB,EAA6C;AAC3C,QAAMM,cAAcb,OAAOY,QAAP,CAAgBL,SAAhB,CAApB;AACA,QAAMO,WAAWd,OAAOY,QAAP,CAAgBL,YAAY,CAA5B,CAAjB;;AAEA,QAAIG,YAAYG,WAAZ,GAA0B,CAACC,WAAWD,WAAZ,IAA2Bd,SAAzD,EAAoE;AAClEE,eAASD,OAAOJ,MAAP,CAAca,cAAvB;AACD;AACF,GAPD,MAOO;AACL,QAAMM,WAAWf,OAAOY,QAAP,CAAgBL,YAAY,CAA5B,CAAjB;AACA,QAAMM,eAAcb,OAAOY,QAAP,CAAgBL,SAAhB,CAApB;;AAEA,QAAIG,YAAYK,QAAZ,IAAwB,CAACF,eAAcE,QAAf,IAA2BhB,SAAvD,EAAkE;AAChEE,eAASD,OAAOJ,MAAP,CAAca,cAAvB;AACD;AACF;;AAEDR,UAAQG,KAAKY,GAAL,CAASf,KAAT,EAAgB,CAAhB,CAAR;AACAA,UAAQG,KAAKC,GAAL,CAASJ,KAAT,EAAgBD,OAAOiB,UAAP,CAAkBC,MAAlB,GAA2B,CAA3C,CAAR;AACA,SAAOlB,OAAOmB,OAAP,CAAelB,KAAf,EAAsBN,KAAtB,EAA6BE,YAA7B,EAA2CC,QAA3C,CAAP;AACD","file":"slideToClosest.js","sourcesContent":["/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}"]}