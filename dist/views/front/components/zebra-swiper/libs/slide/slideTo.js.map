{"version":3,"sources":["../../../../../../../src/views/front/components/zebra-swiper/libs/slide/slideTo.js"],"names":["slideTo","index","speed","params","runCallbacks","internal","initial","Error","indexAsNumber","parseInt","isValidNumber","isFinite","swiper","slideIndex","timer","snapGrid","slidesGrid","previousIndex","activeIndex","rtl","rtlTranslate","wrapperEl","enabled","animating","preventInteractionOnTransition","skip","Math","min","slidesPerGroupSkip","snapIndex","floor","slidesPerGroup","length","initialSlide","emit","translate","updateProgress","normalizeSlideIndex","i","normalizedTranslate","normalizedGrid","normalizedGridNext","initialized","allowSlideNext","minTranslate","allowSlidePrev","maxTranslate","direction","updateActiveIndex","autoHeight","setTimeout","updateAutoHeight","updateSlidesClasses","effect","setTranslate","transitionStart","transitionEnd","cssMode","isH","isHorizontal","t","isVirtual","virtual","style","scrollSnapType","_immediateVirtual","requestAnimationFrame","_swiperImmediateVirtual","support","smoothScroll","targetPosition","side","scrollTo","setTransition","onSlideToWrapperTransitionEnd","e","destroyed","clearTimeout"],"mappings":"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","file":"slideTo.js","sourcesContent":["import {\r\n\tanimateCSSModeScroll\r\n} from '../../shared/utils.js';\r\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\r\n\tif (typeof index !== 'number' && typeof index !== 'string') {\r\n\t\tthrow new Error(\r\n\t\t\t`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof index}] given.`);\r\n\t}\r\n\r\n\tif (typeof index === 'string') {\r\n\t\t/**\r\n\t\t * The `index` argument converted from `string` to `number`.\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tconst indexAsNumber = parseInt(index, 10);\r\n\t\t/**\r\n\t\t * Determines whether the `index` argument is a valid `number`\r\n\t\t * after being converted from the `string` type.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\r\n\t\tconst isValidNumber = isFinite(indexAsNumber);\r\n\r\n\t\tif (!isValidNumber) {\r\n\t\t\tthrow new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);\r\n\t\t} // Knowing that the converted `index` is a valid number,\r\n\t\t// we can update the original argument's value.\r\n\r\n\r\n\t\tindex = indexAsNumber;\r\n\t}\r\n\r\n\tconst swiper = this;\r\n\tlet slideIndex = index;\r\n\tlet timer;\r\n\tif (slideIndex < 0) slideIndex = 0;\r\n\tconst {\r\n\t\tparams,\r\n\t\tsnapGrid,\r\n\t\tslidesGrid,\r\n\t\tpreviousIndex,\r\n\t\tactiveIndex,\r\n\t\trtlTranslate: rtl,\r\n\t\twrapperEl,\r\n\t\tenabled\r\n\t} = swiper;\r\n\r\n\tif (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\r\n\tlet snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\r\n\tif (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n\r\n\tif ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\r\n\t\tswiper.emit('beforeSlideChangeStart');\r\n\t}\r\n\tconst translate = -snapGrid[snapIndex]; // Update progress\r\n\r\n\tswiper.updateProgress(translate); // Normalize slideIndex\r\n\r\n\tif (params.normalizeSlideIndex) {\r\n\t\tfor (let i = 0; i < slidesGrid.length; i += 1) {\r\n\t\t\tconst normalizedTranslate = -Math.floor(translate * 100);\r\n\t\t\tconst normalizedGrid = Math.floor(slidesGrid[i] * 100);\r\n\t\t\tconst normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\r\n\t\t\tif (typeof slidesGrid[i + 1] !== 'undefined') {\r\n\t\t\t\tif (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (\r\n\t\t\t\t\t\tnormalizedGridNext - normalizedGrid) / 2) {\r\n\t\t\t\t\tslideIndex = i;\r\n\t\t\t\t} else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\r\n\t\t\t\t\tslideIndex = i + 1;\r\n\t\t\t\t}\r\n\t\t\t} else if (normalizedTranslate >= normalizedGrid) {\r\n\t\t\t\tslideIndex = i;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t} // Directions locks\r\n\r\n\r\n\tif (swiper.initialized && slideIndex !== activeIndex) {\r\n\t\tif (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\r\n\t\t\tif ((activeIndex || 0) !== slideIndex) return false;\r\n\t\t}\r\n\t}\r\n\r\n\tlet direction;\r\n\tif (slideIndex > activeIndex) direction = 'next';\r\n\telse if (slideIndex < activeIndex) direction = 'prev';\r\n\telse direction = 'reset'; // Update Index\r\n\r\n\tif (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\r\n\t\tswiper.updateActiveIndex(slideIndex); // Update Height\r\n\r\n\t\tif (params.autoHeight) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tswiper.updateAutoHeight();\r\n\t\t\t}, 0)\r\n\t\t}\r\n\r\n\t\tswiper.updateSlidesClasses();\r\n\r\n\t\tif (params.effect !== 'slide') {\r\n\t\t\tswiper.setTranslate(translate);\r\n\t\t}\r\n\r\n\t\tif (direction !== 'reset') {\r\n\t\t\tswiper.transitionStart(runCallbacks, direction);\r\n\t\t\tswiper.transitionEnd(runCallbacks, direction);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (params.cssMode) {\r\n\t\tconst isH = swiper.isHorizontal();\r\n\t\tconst t = rtl ? translate : -translate;\r\n\r\n\t\tif (speed === 0) {\r\n\t\t\tconst isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n\r\n\t\t\tif (isVirtual) {\r\n\t\t\t\tswiper.wrapperEl.style.scrollSnapType = 'none';\r\n\t\t\t\tswiper._immediateVirtual = true;\r\n\t\t\t}\r\n\r\n\t\t\twrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\r\n\r\n\t\t\tif (isVirtual) {\r\n\t\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\t\tswiper.wrapperEl.style.scrollSnapType = '';\r\n\t\t\t\t\tswiper._swiperImmediateVirtual = false;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!swiper.support.smoothScroll) {\r\n\t\t\t\tanimateCSSModeScroll({\r\n\t\t\t\t\tswiper,\r\n\t\t\t\t\ttargetPosition: t,\r\n\t\t\t\t\tside: isH ? 'left' : 'top'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\twrapperEl.scrollTo({\r\n\t\t\t\t[isH ? 'left' : 'top']: t,\r\n\t\t\t\tbehavior: 'smooth'\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\tswiper.setTransition(speed);\r\n\tswiper.setTranslate(translate);\r\n\tswiper.updateActiveIndex(slideIndex);\r\n\tswiper.updateSlidesClasses();\r\n\tswiper.emit('beforeTransitionStart', speed, internal);\r\n\tswiper.transitionStart(runCallbacks, direction);\r\n\r\n\tif (speed === 0) {\r\n\t\tswiper.transitionEnd(runCallbacks, direction);\r\n\t} else if (!swiper.animating) {\r\n\t\tswiper.animating = true;\r\n\r\n\t\tif (!swiper.onSlideToWrapperTransitionEnd) {\r\n\t\t\tswiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\r\n\t\t\t\tif (!swiper || swiper.destroyed) return;\r\n\t\t\t\tclearTimeout(timer)\r\n\t\t\t\tswiper.onSlideToWrapperTransitionEnd = null;\r\n\t\t\t\tdelete swiper.onSlideToWrapperTransitionEnd;\r\n\t\t\t\tswiper.transitionEnd(runCallbacks, direction);\r\n\t\t\t};\r\n\t\t}\r\n\t\ttimer = setTimeout(() => {\r\n\t\t\tif (swiper.onSlideToWrapperTransitionEnd) {\r\n\t\t\t\tswiper.onSlideToWrapperTransitionEnd();\r\n\t\t\t}\r\n\t\t}, speed)\r\n\t}\r\n\r\n\treturn true;\r\n}\n"]}