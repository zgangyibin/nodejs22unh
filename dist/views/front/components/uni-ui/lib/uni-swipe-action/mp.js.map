{"version":3,"sources":["../../../../../../../src/views/front/components/uni-ui/lib/uni-swipe-action/mp.js"],"names":["data","position","button","computed","pos","JSON","stringify","btn","watch","show","newVal","autoClose","valueObj","$set","mounted","init","getSize","getButtonSize","onReady","methods","uni","$on","res","openSwipe","$emit","change","e","open","onClick","index","item","content","views","createSelectorQuery","in","selectAll","boundingClientRect","exec"],"mappings":";;;;;kBAAe;AACbA,MADa,kBACL;AACN,WAAO;AACLC,gBAAU,EADL;AAELC,cAAQ;AAFH,KAAP;AAID,GANY;;AAObC,YAAU;AACRC,OADQ,iBACD;AACL,aAAOC,KAAKC,SAAL,CAAe,KAAKL,QAApB,CAAP;AACD,KAHO;AAIRM,OAJQ,iBAID;AACL,aAAOF,KAAKC,SAAL,CAAe,KAAKJ,MAApB,CAAP;AACD;AANO,GAPG;AAebM,SAAO;AACLC,QADK,gBACCC,MADD,EACS;AACZ,UAAI,KAAKC,SAAT,EAAoB;AACpB,UAAIC,WAAW,KAAKX,QAAL,CAAc,CAAd,CAAf;AACA,UAAI,CAACW,QAAL,EAAe;AACfA,eAASH,IAAT,GAAgBC,MAAhB;AACA,WAAKG,IAAL,CAAU,KAAKZ,QAAf,EAAyB,CAAzB,EAA4BW,QAA5B;AACD;AAPI,GAfM;AAwBb;AACAE,SAzBa,qBAyBF;AACT,SAAKC,IAAL;AACA,SAAKC,OAAL;AACA,SAAKC,aAAL;AACD,GA7BY;;AA8Bb;AACA;AACAC,SAhCa,qBAgCF;AACT,SAAKH,IAAL;AACA,SAAKC,OAAL;AACA,SAAKC,aAAL;AACD,GApCY;;AAqCb;AACAE,WAAS;AACPJ,QADO,kBACC;AAAA;;AACNK,UAAIC,GAAJ,CAAQ,qBAAR,EAA+B,UAACC,GAAD,EAAS;AACtC,YAAIA,QAAQ,KAAR,IAAgB,MAAKX,SAAzB,EAAoC;AAClC,cAAIC,WAAW,MAAKX,QAAL,CAAc,CAAd,CAAf;AACAW,mBAASH,IAAT,GAAgB,KAAhB;AACA,gBAAKI,IAAL,CAAU,MAAKZ,QAAf,EAAyB,CAAzB,EAA4BW,QAA5B;AACD;AACF,OAND;AAOD,KATM;AAUPW,aAVO,uBAUM;AACXH,UAAII,KAAJ,CAAU,qBAAV,EAAiC,IAAjC;AACD,KAZM;AAaPC,UAbO,kBAaCC,CAbD,EAaI;AACT,WAAKF,KAAL,CAAW,QAAX,EAAqBE,EAAEC,IAAvB;AACA,UAAIf,WAAW,KAAKX,QAAL,CAAc,CAAd,CAAf;AACAW,eAASH,IAAT,GAAgBiB,EAAEC,IAAlB;AACA,WAAKd,IAAL,CAAU,KAAKZ,QAAf,EAAyB,CAAzB,EAA4BW,QAA5B;AACA;AACD,KAnBM;AAoBPgB,WApBO,mBAoBEC,KApBF,EAoBSC,IApBT,EAoBe;AACpB,WAAKN,KAAL,CAAW,OAAX,EAAoB;AAClBO,iBAASD,IADS;AAElBD;AAFkB,OAApB;AAID,KAzBM;AA0BPb,WA1BO,qBA0BI;AAAA;;AACT,UAAMgB,QAAQZ,IAAIa,mBAAJ,GAA0BC,EAA1B,CAA6B,IAA7B,CAAd;AACAF,YACGG,SADH,CACa,sBADb,EAEGC,kBAFH,CAEsB,gBAAQ;AAC1B,YAAI,OAAKzB,SAAT,EAAoB;AAClBX,eAAK,CAAL,EAAQS,IAAR,GAAe,KAAf;AACD,SAFD,MAEO;AACLT,eAAK,CAAL,EAAQS,IAAR,GAAe,OAAKA,IAApB;AACD;AACD,eAAKR,QAAL,GAAgBD,IAAhB;AACD,OATH,EAUGqC,IAVH;AAWD,KAvCM;AAwCPpB,iBAxCO,2BAwCU;AAAA;;AACf,UAAMe,QAAQZ,IAAIa,mBAAJ,GAA0BC,EAA1B,CAA6B,IAA7B,CAAd;AACAF,YACGG,SADH,CACa,cADb,EAEGC,kBAFH,CAEsB,gBAAQ;AAC1B,eAAKlC,MAAL,GAAcF,IAAd;AACD,OAJH,EAKGqC,IALH;AAMD;AAhDM;AAtCI,C","file":"mp.js","sourcesContent":["export default {\r\n  data () {\r\n    return {\r\n      position: [],\r\n      button: []\r\n    }\r\n  },\r\n  computed: {\r\n    pos () {\r\n      return JSON.stringify(this.position)\r\n    },\r\n    btn () {\r\n      return JSON.stringify(this.button)\r\n    }\r\n  },\r\n  watch: {\r\n    show (newVal) {\r\n      if (this.autoClose) return\r\n      let valueObj = this.position[0]\n      if (!valueObj) return\r\n      valueObj.show = newVal\r\n      this.$set(this.position, 0, valueObj)\r\n    }\r\n  },\r\n  // #ifdef H5\r\n  mounted () {\r\n    this.init()\r\n    this.getSize()\r\n    this.getButtonSize()\r\n  },\r\n  // #endif\r\n  // #ifndef H5\r\n  onReady () {\r\n    this.init()\r\n    this.getSize()\r\n    this.getButtonSize()\r\n  },\r\n  // #endif\r\n  methods: {\r\n    init () {\r\n      uni.$on('__uni__swipe__event', (res) => {\r\n        if (res !== this && this.autoClose) {\r\n          let valueObj = this.position[0]\r\n          valueObj.show = false\r\n          this.$set(this.position, 0, valueObj)\r\n        }\r\n      })\r\n    },\r\n    openSwipe () {\r\n      uni.$emit('__uni__swipe__event', this)\r\n    },\r\n    change (e) {\r\n      this.$emit('change', e.open)\r\n      let valueObj = this.position[0]\r\n      valueObj.show = e.open\r\n      this.$set(this.position, 0, valueObj)\r\n      // console.log('改变', e);\r\n    },\r\n    onClick (index, item) {\r\n      this.$emit('click', {\r\n        content: item,\r\n        index\r\n      })\r\n    },\r\n    getSize () {\r\n      const views = uni.createSelectorQuery().in(this)\r\n      views\r\n        .selectAll('.selector-query-hock')\r\n        .boundingClientRect(data => {\r\n          if (this.autoClose) {\r\n            data[0].show = false\r\n          } else {\r\n            data[0].show = this.show\r\n          }\r\n          this.position = data\r\n        })\r\n        .exec()\r\n    },\r\n    getButtonSize () {\r\n      const views = uni.createSelectorQuery().in(this)\r\n      views\r\n        .selectAll('.button-hock')\r\n        .boundingClientRect(data => {\r\n          this.button = data\r\n        })\r\n        .exec()\r\n    }\r\n  }\r\n}\n"]}