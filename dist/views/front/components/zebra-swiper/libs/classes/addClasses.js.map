{"version":3,"sources":["../../../../../../../src/views/front/components/zebra-swiper/libs/classes/addClasses.js"],"names":["addClasses","prepareClasses","entries","prefix","resultClasses","forEach","item","Object","keys","classNames","push","swiper","params","rtl","$el","device","support","suffixes","direction","touch","freeMode","enabled","autoHeight","grid","rows","fill","android","ios","cssMode","centeredSlides","containerModifierClass","addClass","join","emitContainerClasses"],"mappings":";;;;;;;;;;;;;;kBAgBwBA,U;;;;AAhBxB,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,MAAjC,EAAyC;AACvC,MAAMC,gBAAgB,EAAtB;AACAF,UAAQG,OAAR,CAAgB,gBAAQ;AACtB,QAAI,QAAOC,IAAP,uDAAOA,IAAP,OAAgB,QAApB,EAA8B;AAC5BC,aAAOC,IAAP,CAAYF,IAAZ,EAAkBD,OAAlB,CAA0B,sBAAc;AACtC,YAAIC,KAAKG,UAAL,CAAJ,EAAsB;AACpBL,wBAAcM,IAAd,CAAmBP,SAASM,UAA5B;AACD;AACF,OAJD;AAKD,KAND,MAMO,IAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AACnCF,oBAAcM,IAAd,CAAmBP,SAASG,IAA5B;AACD;AACF,GAVD;AAWA,SAAOF,aAAP;AACD;;AAEc,SAASJ,UAAT,GAAsB;AACnC,MAAMW,SAAS,IAAf;AADmC,MAGjCF,UAHiC,GAS/BE,MAT+B,CAGjCF,UAHiC;AAAA,MAIjCG,MAJiC,GAS/BD,MAT+B,CAIjCC,MAJiC;AAAA,MAKjCC,GALiC,GAS/BF,MAT+B,CAKjCE,GALiC;AAAA,MAMjCC,GANiC,GAS/BH,MAT+B,CAMjCG,GANiC;AAAA,MAOjCC,MAPiC,GAS/BJ,MAT+B,CAOjCI,MAPiC;AAAA,MAQjCC,OARiC,GAS/BL,MAT+B,CAQjCK,OARiC,EASvB;;AAEZ,MAAMC,WAAWhB,eAAe,CAAC,aAAD,EAAgBW,OAAOM,SAAvB,EAAkC;AAChE,sBAAkB,CAACF,QAAQG;AADqC,GAAlC,EAE7B;AACD,iBAAaR,OAAOC,MAAP,CAAcQ,QAAd,IAA0BR,OAAOQ,QAAP,CAAgBC;AADtD,GAF6B,EAI7B;AACD,kBAAcT,OAAOU;AADpB,GAJ6B,EAM7B;AACD,WAAOT;AADN,GAN6B,EAQ7B;AACD,YAAQD,OAAOW,IAAP,IAAeX,OAAOW,IAAP,CAAYC,IAAZ,GAAmB;AADzC,GAR6B,EAU7B;AACD,mBAAeZ,OAAOW,IAAP,IAAeX,OAAOW,IAAP,CAAYC,IAAZ,GAAmB,CAAlC,IAAuCZ,OAAOW,IAAP,CAAYE,IAAZ,KAAqB;AAD1E,GAV6B,EAY7B;AACD,eAAWV,OAAOW;AADjB,GAZ6B,EAc7B;AACD,WAAOX,OAAOY;AADb,GAd6B,EAgB7B;AACD,gBAAYf,OAAOgB;AADlB,GAhB6B,EAkB7B;AACD,gBAAYhB,OAAOgB,OAAP,IAAkBhB,OAAOiB;AADpC,GAlB6B,CAAf,EAoBbjB,OAAOkB,sBApBM,CAAjB;AAqBArB,aAAWC,IAAX,oDAAmBO,QAAnB;AACAH,MAAIiB,QAAJ,CAAa,2CAAItB,UAAJ,GAAgBuB,IAAhB,CAAqB,GAArB,CAAb;AACArB,SAAOsB,oBAAP;AACD","file":"addClasses.js","sourcesContent":["function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\n\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    $el,\n    device,\n    support\n  } = swiper; // prettier-ignore\n\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'pointer-events': !support.touch\n  }, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  $el.addClass([...classNames].join(' '));\n  swiper.emitContainerClasses();\n}"]}