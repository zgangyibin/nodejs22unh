{"version":3,"sources":["../../src/api/Qiye.js"],"names":["config","db","api","all","req","res","pwd","query","password","QiyeModel","findOne","where","qiyezhanghao","username","mima","userinfo","toRes","session","dataValues","sfsh","token","jwt","sign","id","role","loginUserColumn","tableName","jwtSecret","expiresIn","destroy","post","Object","keys","body","forEach","item","create","undefined","decode","headers","record","update","get","page","parseInt","limit","sort","order","indexOf","Op","like","eq","qiyemingcheng","tupian","lianxiren","lianxidianhua","qiyeyouxiang","qiyedizhi","shhf","findAndCountAll","offset","result","currPage","pageSize","in","params","sql","type","remindstart","columnName","remindend","remindStart","util","getDateTimeFormat","Number","remindEnd","sequelize","plain","raw","QueryTypes","SELECT","results","count","xColumnName","yColumnName","timeStatType","dbConnection","dbtype","toLowerCase"],"mappings":"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","file":"Qiye.js","sourcesContent":["import { Router } from 'express'\r\nimport { Op, QueryTypes } from 'sequelize'\r\nimport sequelize from '../models/sequelize'\r\nimport toRes from '../lib/toRes'\r\nimport QiyeModel from '../models/QiyeModel'\r\nimport util from '../lib/util'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport default ({ config, db }) => {\r\n\tlet api = Router()\r\n\r\n\t// 用户登录接口\r\n\tapi.all('/login', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet pwd = req.query.password\r\n\t\t\t// 企业账号和密码\r\n\t\t\tlet userinfo = await QiyeModel.findOne({ where: { qiyezhanghao: req.query.username, mima: pwd } })\r\n\t\t\tif (userinfo === null) {\r\n\t\t\t\ttoRes.session(res, -1, '用户名或密码错误！')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif (userinfo.dataValues.sfsh === '否' || userinfo.dataValues.sfsh == '待审核' || userinfo.dataValues.sfsh == '')\r\n\t\t\t{\r\n\t\t\t\ttoRes.session(res, -1, '账号已锁定，请联系管理员审核!')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tconst token = jwt.sign( //jwt生成token\r\n\t\t\t\t{\r\n\t\t\t\t\tid: userinfo.dataValues.id,\r\n\t\t\t\t\tusername: userinfo.dataValues.qiyezhanghao,\r\n\t\t\t\t\trole: '企业',\r\n                    loginUserColumn: 'qiyezhanghao',\r\n                    tableName: 'qiye'\r\n\t\t\t\t},\r\n\t\t\t\tconfig.jwtSecret,\r\n\t\t\t\t{\r\n\t\t\t\t\texpiresIn: 60 * 60 * 24 * 1//秒到期时间\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tuserinfo.dataValues.token = token\r\n\t\t\tuserinfo.dataValues.role = '企业'\r\n\t\t\tuserinfo.dataValues.loginUserColumn = 'qiyezhanghao'\r\n\t\t\tuserinfo.dataValues.tableName = 'qiye'\r\n\t\t\tdelete userinfo.dataValues.mima\r\n\t\t\treq.session.userinfo = userinfo\r\n\t\t\ttoRes.session(res, 0, '登录成功！', token)\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 用户退出接口\r\n\tapi.all('/logout', (req, res) => {\r\n\t\t\r\n\t\treq.session.destroy(err => {\r\n\t\t\ttoRes.session(res, 0, '退出成功！')\r\n\t\t})\r\n\t})\r\n\r\n\t// 注册接口\r\n\tapi.post('/register', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tconst userinfo = await QiyeModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\t\t\t\ttoRes.session(res, -1, '注册失败！')\r\n\t\t\t} else {\r\n\t\t\t\ttoRes.session(res, 0, '注册成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\t\t\t\r\n\t\t\ttoRes.session(res, -2, '请检查是否正确输入或用户名重复！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取session接口\r\n\tapi.all('/session', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\ttoRes.record(res, 0, await QiyeModel.findOne({ where: { id: req.session.userinfo === undefined ? jwt.decode(req.headers.token).id : req.session.userinfo.id } }))\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 忘记密码（找回密码）\r\n\tapi.all('/resetPass', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n    \t\tlet pwd = '123456'\r\n\r\n\t\t\tawait QiyeModel.update({\r\n\t\t\t\tmima: pwd\r\n\t\t\t}, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  qiyezhanghao: req.query.username\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '密码已重置为：123456')\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 分页接口（后端）\r\n\tapi.get('/page', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet qiyezhanghao = req.query.qiyezhanghao\r\n\t\t\tif (qiyezhanghao) {//企业账号\r\n\r\n\t\t\t\tif (qiyezhanghao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.qiyezhanghao = {\r\n\t\t\t\t\t\t[Op.like]: qiyezhanghao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.qiyezhanghao = {\r\n\t\t\t\t\t\t[Op.eq]: qiyezhanghao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet mima = req.query.mima\r\n\t\t\tif (mima) {//密码\r\n\r\n\t\t\t\tif (mima.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.mima = {\r\n\t\t\t\t\t\t[Op.like]: mima\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.mima = {\r\n\t\t\t\t\t\t[Op.eq]: mima\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet qiyemingcheng = req.query.qiyemingcheng\r\n\t\t\tif (qiyemingcheng) {//企业名称\r\n\r\n\t\t\t\tif (qiyemingcheng.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.qiyemingcheng = {\r\n\t\t\t\t\t\t[Op.like]: qiyemingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.qiyemingcheng = {\r\n\t\t\t\t\t\t[Op.eq]: qiyemingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet tupian = req.query.tupian\r\n\t\t\tif (tupian) {//企业图片\r\n\r\n\t\t\t\tif (tupian.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.tupian = {\r\n\t\t\t\t\t\t[Op.like]: tupian\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.tupian = {\r\n\t\t\t\t\t\t[Op.eq]: tupian\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet lianxiren = req.query.lianxiren\r\n\t\t\tif (lianxiren) {//联系人\r\n\r\n\t\t\t\tif (lianxiren.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.lianxiren = {\r\n\t\t\t\t\t\t[Op.like]: lianxiren\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.lianxiren = {\r\n\t\t\t\t\t\t[Op.eq]: lianxiren\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet lianxidianhua = req.query.lianxidianhua\r\n\t\t\tif (lianxidianhua) {//联系电话\r\n\r\n\t\t\t\tif (lianxidianhua.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.lianxidianhua = {\r\n\t\t\t\t\t\t[Op.like]: lianxidianhua\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.lianxidianhua = {\r\n\t\t\t\t\t\t[Op.eq]: lianxidianhua\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet qiyeyouxiang = req.query.qiyeyouxiang\r\n\t\t\tif (qiyeyouxiang) {//企业邮箱\r\n\r\n\t\t\t\tif (qiyeyouxiang.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.qiyeyouxiang = {\r\n\t\t\t\t\t\t[Op.like]: qiyeyouxiang\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.qiyeyouxiang = {\r\n\t\t\t\t\t\t[Op.eq]: qiyeyouxiang\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet qiyedizhi = req.query.qiyedizhi\r\n\t\t\tif (qiyedizhi) {//企业地址\r\n\r\n\t\t\t\tif (qiyedizhi.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.qiyedizhi = {\r\n\t\t\t\t\t\t[Op.like]: qiyedizhi\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.qiyedizhi = {\r\n\t\t\t\t\t\t[Op.eq]: qiyedizhi\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet sfsh = req.query.sfsh\r\n\t\t\tif (sfsh) {//审核状态\r\n\r\n\t\t\t\tif (sfsh.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.sfsh = {\r\n\t\t\t\t\t\t[Op.like]: sfsh\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.sfsh = {\r\n\t\t\t\t\t\t[Op.eq]: sfsh\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet shhf = req.query.shhf\r\n\t\t\tif (shhf) {//审核回复\r\n\r\n\t\t\t\tif (shhf.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.shhf = {\r\n\t\t\t\t\t\t[Op.like]: shhf\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.shhf = {\r\n\t\t\t\t\t\t[Op.eq]: shhf\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet result = await QiyeModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 分页接口（前端）\r\n\tapi.get('/list', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet sfsh = req.query.sfsh\r\n\t\t\tif (sfsh) {\r\n\t\t\t\twhere.sfsh = {\r\n\t\t\t\t\t[Op.eq]: sfsh\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet qiyezhanghao = req.query.qiyezhanghao\r\n\t\t\tif (qiyezhanghao) {\r\n\r\n\t\t\t\tif (qiyezhanghao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.qiyezhanghao = {\r\n\t\t\t\t\t\t[Op.like]: qiyezhanghao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.qiyezhanghao = {\r\n\t\t\t\t\t\t[Op.eq]: qiyezhanghao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet qiyemingcheng = req.query.qiyemingcheng\r\n\t\t\tif (qiyemingcheng) {\r\n\r\n\t\t\t\tif (qiyemingcheng.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.qiyemingcheng = {\r\n\t\t\t\t\t\t[Op.like]: qiyemingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.qiyemingcheng = {\r\n\t\t\t\t\t\t[Op.eq]: qiyemingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet result = await QiyeModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 401, '您的权限不够！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\t// 保存接口（后端）\r\n\tapi.post('/save', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tconst userinfo = await QiyeModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 保存接口（前端）\r\n\tapi.post('/add', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tif (jwt.decode(req.headers.token) == null) {\r\n\t\t\t\ttoRes.session(res, 401, '请登录后再操作', '', 401)\r\n\t\t\t}\r\n\r\n\t\t\tconst userinfo = await QiyeModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 更新接口\r\n\tapi.post('/update', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tawait QiyeModel.update(req.body, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: req.body.id || 0\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '编辑成功！')\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 删除接口\r\n\tapi.post('/delete', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tawait QiyeModel.destroy({\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: {\r\n\t\t\t\t\t[Op.in]: req.body\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '删除成功！')\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 详情接口（后端）\r\n\tapi.all('/info/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\ttoRes.record(res, 0, await QiyeModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 详情接口（前端）\r\n\tapi.all('/detail/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\ttoRes.record(res, 0, await QiyeModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取需要提醒的记录数接口\r\n\tapi.get('/remind/:columnName/:type', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = 'SELECT 0 AS count'\r\n\t\t\t\r\n\t\t\tif (req.params.type == 1) {\r\n\t\t\t\tif (req.query.remindstart) sql = \"SELECT COUNT(*) AS count FROM qiye WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"'\"\r\n\t\t\t\tif (req.query.remindend) sql = \"SELECT COUNT(*) AS count FROM qiye WHERE \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM qiye WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"' AND \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (req.params.type == 2) {\r\n\t\t\t\tif (req.query.remindstart) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM qiye WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"'\"\r\n\t\t\t\t}\r\n\t\t\t\tif (req.query.remindend) {\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM qiye WHERE \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM qiye WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"' AND \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst results = await sequelize.query(sql, {\r\n\t\t\t\tplain: true,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.count(res, 0, results.count)\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\t// 分组统计接口\r\n\tapi.get('/group/:columnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet columnName = req.params.columnName\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tsql = \"SELECT COUNT(*) AS total, \" + columnName + \" FROM qiye \" + where + \" GROUP BY \" + columnName + \" LIMIT 10\" \r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 统计指定字段\r\n\tapi.get('/value/:xColumnName/:yColumnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\r\n\t\t\tsql = \"SELECT \" + xColumnName + \", SUM(\" + yColumnName + \") AS total FROM qiye \" + where + \" GROUP BY \" + xColumnName + \" DESC LIMIT 10\"\r\n\t\t\t\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 按日期统计\r\n\tapi.get('/value/:xColumnName/:yColumnName/:timeStatType', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\tlet timeStatType = req.params.timeStatType\r\n\t\t\tlet tableName = \"qiye\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\r\n            if (config.dbConnection.dbtype.toLowerCase() == \"mysql\") {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m')  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y')  LIMIT 10\";\r\n            } else {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120)  LIMIT 10\";\r\n            }\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\treturn api\r\n}\r\n"]}