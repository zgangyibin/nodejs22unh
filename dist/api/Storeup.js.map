{"version":3,"sources":["../../src/api/Storeup.js"],"names":["config","db","api","get","req","res","page","parseInt","query","limit","sort","order","where","userid","indexOf","Op","like","eq","refid","tablename","name","picture","type","inteltype","remark","jwt","decode","headers","token","role","session","userinfo","undefined","id","StoreupModel","findAndCountAll","offset","result","currPage","pageSize","toRes","post","Object","keys","body","forEach","item","create","update","destroy","in","all","findOne","params","record","sql","remindstart","columnName","remindend","remindStart","util","getDateTimeFormat","Number","remindEnd","sequelize","plain","raw","QueryTypes","SELECT","results","count","xColumnName","yColumnName","timeStatType","tableName","dbConnection","dbtype","toLowerCase"],"mappings":"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","file":"Storeup.js","sourcesContent":["import { Router } from 'express'\r\nimport { Op, QueryTypes } from 'sequelize'\r\nimport sequelize from '../models/sequelize'\r\nimport toRes from '../lib/toRes'\r\nimport StoreupModel from '../models/StoreupModel'\r\nimport util from '../lib/util'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport default ({ config, db }) => {\r\n\tlet api = Router()\r\n\r\n\t// 分页接口（后端）\r\n\tapi.get('/page', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet userid = req.query.userid\r\n\t\t\tif (userid) {//学生id\r\n\r\n\t\t\t\tif (userid.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.userid = {\r\n\t\t\t\t\t\t[Op.like]: userid\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.userid = {\r\n\t\t\t\t\t\t[Op.eq]: userid\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet refid = req.query.refid\r\n\t\t\tif (refid) {//收藏的企业或岗位id\r\n\r\n\t\t\t\tif (refid.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.refid = {\r\n\t\t\t\t\t\t[Op.like]: refid\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.refid = {\r\n\t\t\t\t\t\t[Op.eq]: refid\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet tablename = req.query.tablename\r\n\t\t\tif (tablename) {//表名\r\n\r\n\t\t\t\tif (tablename.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.tablename = {\r\n\t\t\t\t\t\t[Op.like]: tablename\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.tablename = {\r\n\t\t\t\t\t\t[Op.eq]: tablename\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet name = req.query.name\r\n\t\t\tif (name) {//收藏的企业或岗位名称\r\n\r\n\t\t\t\tif (name.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.name = {\r\n\t\t\t\t\t\t[Op.like]: name\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.name = {\r\n\t\t\t\t\t\t[Op.eq]: name\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet picture = req.query.picture\r\n\t\t\tif (picture) {//收藏的企业或岗位图片\r\n\r\n\t\t\t\tif (picture.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.picture = {\r\n\t\t\t\t\t\t[Op.like]: picture\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.picture = {\r\n\t\t\t\t\t\t[Op.eq]: picture\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet type = req.query.type\r\n\t\t\tif (type) {//收藏的企业或岗位类型\r\n\r\n\t\t\t\tif (type.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.type = {\r\n\t\t\t\t\t\t[Op.like]: type\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.type = {\r\n\t\t\t\t\t\t[Op.eq]: type\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet inteltype = req.query.inteltype\r\n\t\t\tif (inteltype) {//推荐类型\r\n\r\n\t\t\t\tif (inteltype.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.inteltype = {\r\n\t\t\t\t\t\t[Op.like]: inteltype\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.inteltype = {\r\n\t\t\t\t\t\t[Op.eq]: inteltype\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet remark = req.query.remark\r\n\t\t\tif (remark) {//备注\r\n\r\n\t\t\t\tif (remark.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.remark = {\r\n\t\t\t\t\t\t[Op.like]: remark\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.remark = {\r\n\t\t\t\t\t\t[Op.eq]: remark\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n            if (jwt.decode(req.headers.token).role != '管理员') {\r\n\t\t\t\twhere.userid = {\r\n\t\t\t\t\t[Op.eq]: req.session.userinfo === undefined ? jwt.decode(req.headers.token).id : req.session.userinfo.id\r\n\t\t\t\t}\r\n            }\r\n\r\n\t\t\tlet result = await StoreupModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 分页接口（前端）\r\n\tapi.get('/list', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet refid = req.query.refid\r\n\t\t\tif (refid) {\r\n\t\t\t\twhere.refid = {\r\n\t\t\t\t\t[Op.eq]: refid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet name = req.query.name\r\n\t\t\tif (name) {\r\n\r\n\t\t\t\tif (name.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.name = {\r\n\t\t\t\t\t\t[Op.like]: name\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.name = {\r\n\t\t\t\t\t\t[Op.eq]: name\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet type = req.query.type\r\n\t\t\tif (type) {\r\n\t\t\t\twhere.type = {\r\n\t\t\t\t\t[Op.eq]: type\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet result = await StoreupModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 401, '您的权限不够！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\t// 保存接口（后端）\r\n\tapi.post('/save', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tif (!req.body.userid) {\r\n\t\t\t\treq.body.userid = req.session.userinfo === undefined ? jwt.decode(req.headers.token).id : req.session.userinfo.id\r\n\t\t\t}\r\n\r\n\t\t\tconst userinfo = await StoreupModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 保存接口（前端）\r\n\tapi.post('/add', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tif (jwt.decode(req.headers.token) == null) {\r\n\t\t\t\ttoRes.session(res, 401, '请登录后再操作', '', 401)\r\n\t\t\t}\r\n\r\n\t\t\treq.body.userid = req.session.userinfo === undefined ? jwt.decode(req.headers.token).id : req.session.userinfo.id\r\n\r\n\t\t\tconst userinfo = await StoreupModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 更新接口\r\n\tapi.post('/update', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tawait StoreupModel.update(req.body, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: req.body.id || 0\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '编辑成功！')\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 删除接口\r\n\tapi.post('/delete', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tawait StoreupModel.destroy({\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: {\r\n\t\t\t\t\t[Op.in]: req.body\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '删除成功！')\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 详情接口（后端）\r\n\tapi.all('/info/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\ttoRes.record(res, 0, await StoreupModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 详情接口（前端）\r\n\tapi.all('/detail/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\ttoRes.record(res, 0, await StoreupModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取需要提醒的记录数接口\r\n\tapi.get('/remind/:columnName/:type', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = 'SELECT 0 AS count'\r\n\t\t\t\r\n\t\t\tif (req.params.type == 1) {\r\n\t\t\t\tif (req.query.remindstart) sql = \"SELECT COUNT(*) AS count FROM storeup WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"'\"\r\n\t\t\t\tif (req.query.remindend) sql = \"SELECT COUNT(*) AS count FROM storeup WHERE \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM storeup WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"' AND \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (req.params.type == 2) {\r\n\t\t\t\tif (req.query.remindstart) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM storeup WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"'\"\r\n\t\t\t\t}\r\n\t\t\t\tif (req.query.remindend) {\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM storeup WHERE \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM storeup WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"' AND \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst results = await sequelize.query(sql, {\r\n\t\t\t\tplain: true,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.count(res, 0, results.count)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 分组统计接口\r\n\tapi.get('/group/:columnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet columnName = req.params.columnName\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tsql = \"SELECT COUNT(*) AS total, \" + columnName + \" FROM storeup \" + where + \" GROUP BY \" + columnName + \" LIMIT 10\" \r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 统计指定字段\r\n\tapi.get('/value/:xColumnName/:yColumnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\t\r\n\t\t\tsql = \"SELECT \" + xColumnName + \", SUM(\" + yColumnName + \") AS total FROM storeup \" + where + \" GROUP BY \" + xColumnName + \" DESC LIMIT 10\"\r\n\t\t\t\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 按日期统计\r\n\tapi.get('/value/:xColumnName/:yColumnName/:timeStatType', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\tlet timeStatType = req.params.timeStatType\r\n\t\t\tlet tableName = \"storeup\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\t\r\n            if (config.dbConnection.dbtype.toLowerCase() == \"mysql\") {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m')  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y')  LIMIT 10\";\r\n            } else {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120)  LIMIT 10\";\r\n            }\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\treturn api\r\n}\r\n"]}