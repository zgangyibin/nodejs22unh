{"version":3,"sources":["../../src/lib/util.js"],"names":["Date","prototype","Format","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k","isNothing","prop","undefined","getDateTimeFormat","days","getTime","translateDataToTree","data","parents","filter","value","parentid","children","translator","forEach","parent","current","index","id","temp","JSON","parse","stringify","splice","childs","push"],"mappings":";;;;;AAAAA,KAAKC,SAAL,CAAeC,MAAf,GAAwB,UAASC,GAAT,EAAc;AAClC,QAAIC,IAAI;AACJ,cAAM,KAAKC,QAAL,KAAkB,CADpB;AAEJ,cAAM,KAAKC,OAAL,EAFF;AAGJ,cAAM,KAAKC,QAAL,EAHF;AAIJ,cAAM,KAAKC,UAAL,EAJF;AAKJ,cAAM,KAAKC,UAAL,EALF;AAMJ,aAAK,KAAKC,eAAL;AAND,KAAR;AAQA,QAAI,OAAOC,IAAP,CAAYR,GAAZ,CAAJ,EAAsBA,MAAMA,IAAIS,OAAJ,CAAYC,OAAOC,EAAnB,EAAuB,CAAC,KAAKC,WAAL,KAAqB,EAAtB,EAA0BC,MAA1B,CAAiC,IAAIH,OAAOC,EAAP,CAAUG,MAA/C,CAAvB,CAAN;AACtB,SAAK,IAAIC,CAAT,IAAcd,CAAd;AACI,YAAI,IAAIS,MAAJ,CAAW,MAAMK,CAAN,GAAU,GAArB,EAA0BP,IAA1B,CAA+BR,GAA/B,CAAJ,EAAyCA,MAAMA,IAAIS,OAAJ,CAAYC,OAAOC,EAAnB,EAAwBD,OAAOC,EAAP,CAAUG,MAAV,IAAoB,CAArB,GAA2Bb,EAAEc,CAAF,CAA3B,GAAoC,CAAC,OAAOd,EAAEc,CAAF,CAAR,EAAcF,MAAd,CAAqB,CAAC,KAAKZ,EAAEc,CAAF,CAAN,EAAYD,MAAjC,CAA3D,CAAN;AAD7C,KAEA,OAAOd,GAAP;AACH,CAbD;;kBAee;AACdgB,aADc,qBACHC,IADG,EACG;AAChB,eAAOA,SAAS,IAAT,IAAiBA,SAASC,SAA1B,IAAuCD,SAAS,EAAvD;AACA,KAHa;AAIdE,qBAJc,+BAIwC;AAAA,YAAnCC,IAAmC,uEAA9B,CAA8B;AAAA,YAA3BpB,GAA2B,uEAAvB,qBAAuB;;AACrD,eAAO,IAAIH,IAAJ,CAAS,IAAIA,IAAJ,GAAWwB,OAAX,KAAuB,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsBD,IAAtD,EAA4DrB,MAA5D,CAAmEC,GAAnE,CAAP;AACA,KANa;;AAOX;AACAsB,uBARW,+BAQSC,IART,EAQe;AACtB,YAAIC,UAAUD,KAAKE,MAAL,CAAY;AAAA,mBAASC,MAAMC,QAAN,IAAkB,CAA3B;AAAA,SAAZ,CAAd;AACA,YAAIC,WAAWL,KAAKE,MAAL,CAAY;AAAA,mBAASC,MAAMC,QAAN,IAAkB,CAA3B;AAAA,SAAZ,CAAf;AACA,YAAIE,aAAa,SAAbA,UAAa,CAACL,OAAD,EAAUI,QAAV,EAAuB;AACpCJ,oBAAQM,OAAR,CAAgB,UAACC,MAAD,EAAY;AACxBH,yBAASE,OAAT,CAAiB,UAACE,OAAD,EAAUC,KAAV,EAAoB;AACjC,wBAAID,QAAQL,QAAR,KAAqBI,OAAOG,EAAhC,EAAoC;AAChC,4BAAIC,OAAOC,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeV,QAAf,CAAX,CAAX;AACAO,6BAAKI,MAAL,CAAYN,KAAZ,EAAmB,CAAnB;AACAJ,mCAAW,CAACG,OAAD,CAAX,EAAsBG,IAAtB;AACA,+BAAOJ,OAAOS,MAAd,KAAyB,WAAzB,GAAuCT,OAAOS,MAAP,CAAcC,IAAd,CAAmBT,OAAnB,CAAvC,GAAqED,OAAOS,MAAP,GAAgB,CAACR,OAAD,CAArF;AACH;AACJ,iBAPD;AAOG,aARP;AAUH,SAXD;AAYAH,mBAAWL,OAAX,EAAoBI,QAApB;AACA,eAAOJ,OAAP;AACH;AAzBU,C","file":"util.js","sourcesContent":["Date.prototype.Format = function(fmt) {\n    var o = {\n        \"M+\": this.getMonth() + 1,\n        \"d+\": this.getDate(),\n        \"h+\": this.getHours(), \n        \"m+\": this.getMinutes(),\n        \"s+\": this.getSeconds(), \n        \"S\": this.getMilliseconds()\n    };\n    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o)\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n    return fmt;\n}\n\nexport default {\n\tisNothing (prop) {\n\t\treturn prop === null || prop === undefined || prop === ''\n\t},\n\tgetDateTimeFormat (days=0, fmt='yyyy-MM-dd hh:mm:ss') {\n\t\treturn new Date(new Date().getTime() + 1000 * 60 * 60 * 24 * days).Format(fmt)\n\t},\n    //日期转为树形结构\n    translateDataToTree(data) {\n        let parents = data.filter(value => value.parentid == 0)\n        let children = data.filter(value => value.parentid != 0)\n        let translator = (parents, children) => {\n            parents.forEach((parent) => {\n                children.forEach((current, index) => {\n                    if (current.parentid === parent.id) {\n                        let temp = JSON.parse(JSON.stringify(children))\n                        temp.splice(index, 1)\n                        translator([current], temp)\n                        typeof parent.childs !== 'undefined' ? parent.childs.push(current) : parent.childs = [current]\n                    }\n                })}\n            )\n        }\n        translator(parents, children)\n        return parents\n    }\n}\n"]}