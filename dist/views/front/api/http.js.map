{"version":3,"sources":["../../../../src/views/front/api/http.js"],"names":["config","baseUrl","base","url","header","data","method","dataType","success","fail","complete","interceptor","request","response","options","token","uni","getStorageSync","Object","assign","Promise","resolve","reject","_config","statusCode","process","env","NODE_ENV","newResponse","rs","code","navigateTo","showToast","title","msg","icon","duration","requestId","Date","getTime","get","post","put","delete","_reqlog","req","_reslog","res","_statusCode"],"mappings":"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","file":"http.js","sourcesContent":["/**\r\n * 通用uni-app网络请求\r\n * 基于 Promise 对象实现更简单的 request 使用方式，支持请求和响应拦截\r\n */\r\nimport base from './base'\r\n\r\nexport default {\r\n\tconfig: {\r\n\t\tbaseUrl: base.url,\r\n\t\theader: {\r\n\t\t\t'Content-Type': 'application/json;charset=UTF-8'\r\n\t\t},\r\n\t\tdata: {},\r\n\t\tmethod: \"GET\",\r\n\t\tdataType: \"json\",\r\n\t\t// responseType: \"json\",\r\n\t\tsuccess() {},\r\n\t\tfail() {},\r\n\t\tcomplete() {}\r\n\t},\r\n\tinterceptor: {\r\n\t\trequest: null,\r\n\t\tresponse: null\r\n\t},\r\n\trequest(options) {\r\n\t\tif (!options) {\r\n\t\t\toptions = {}\r\n\t\t}\r\n\t\toptions.baseUrl = options.baseUrl || this.config.baseUrl\r\n\t\toptions.dataType = options.dataType || this.config.dataType\r\n\t\toptions.url = options.baseUrl + options.url\r\n\t\toptions.data = options.data || {}\r\n\t\toptions.method = options.method || this.config.method\r\n\t\tlet token = {'Token': uni.getStorageSync(\"token\")}\r\n\t\toptions.header = Object.assign({}, options.header, token) \r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet _config = null\r\n\t\t\toptions.complete = (response) => {\r\n\t\t\t\tlet statusCode = response.statusCode\r\n\t\t\t\tresponse.config = _config\r\n\t\t\t\tif (process.env.NODE_ENV === 'development') {\r\n\t\t\t\t\tif (statusCode === 200) {\r\n\t\t\t\t\t\t// console.log(\"【\" + _config.requestId + \"】 结果：\" + JSON.stringify(response.data))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.interceptor.response) {\r\n\t\t\t\t\tlet newResponse = this.interceptor.response(response)\r\n\t\t\t\t\tif (newResponse) {\r\n\t\t\t\t\t\tresponse = newResponse\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (statusCode === 200) { //成功\r\n\t\t\t\t\tvar rs = response.data;\r\n\t\t\t\t\tif (rs.code === 0) {\r\n\t\t\t\t\t\t// 请求成功后返回\r\n\t\t\t\t\t\tresolve(response.data);\r\n\t\t\t\t\t} else if (rs.code == 401) {\r\n\t\t\t\t\t\tuni.navigateTo({\r\n\t\t\t\t\t\t\turl: '../login/login'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: rs.msg,\r\n\t\t\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\t\t\tduration: 2000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: \"接口执行异常\",\r\n\t\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\t\tduration: 2000\r\n\t\t\t\t\t});\r\n\t\t\t\t\treject(response)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_config = Object.assign({}, this.config, options)\r\n\t\t\t_config.requestId = new Date().getTime()\r\n\t\t\tif (this.interceptor.request) {\r\n\t\t\t\tthis.interceptor.request(_config)\r\n\t\t\t}\r\n\t\t\tif (process.env.NODE_ENV === 'development') {\r\n\t\t\t\t// console.log(\"【\" + _config.requestId + \"】 地址：\" + _config.url)\r\n\t\t\t\tif (_config.data) {\r\n\t\t\t\t\t// console.log(\"【\" + _config.requestId + \"】 参数：\" + JSON.stringify(_config.data))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tuni.request(_config);\r\n\t\t});\r\n\t},\r\n\tget(url, data, options) {\r\n\t\tif (!options) {\r\n\t\t\toptions = {}\r\n\t\t}\r\n\t\toptions.url = url\r\n\t\toptions.data = data\r\n\t\toptions.method = 'GET'\r\n\t\treturn this.request(options)\r\n\t},\r\n\tpost(url, data, options) {\r\n\t\tif (!options) {\r\n\t\t\toptions = {}\r\n\t\t}\r\n\t\toptions.url = url\r\n\t\toptions.data = data\r\n\t\toptions.method = 'POST'\r\n\t\treturn this.request(options)\r\n\t},\r\n\tput(url, data, options) {\r\n\t\tif (!options) {\r\n\t\t\toptions = {}\r\n\t\t}\r\n\t\toptions.url = url\r\n\t\toptions.data = data\r\n\t\toptions.method = 'PUT'\r\n\t\treturn this.request(options)\r\n\t},\r\n\tdelete(url, data, options) {\r\n\t\tif (!options) {\r\n\t\t\toptions = {}\r\n\t\t}\r\n\t\toptions.url = url\r\n\t\toptions.data = data\r\n\t\toptions.method = 'DELETE'\r\n\t\treturn this.request(options)\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * 请求接口日志记录\r\n */\r\nfunction _reqlog(req) {\r\n\tif (process.env.NODE_ENV === 'development') {\r\n\t\t// console.log(\"【\" + req.requestId + \"】 地址：\" + req.url)\r\n\t\tif (req.data) {\r\n\t\t\t// console.log(\"【\" + req.requestId + \"】 请求参数：\" + JSON.stringify(req.data))\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * 响应接口日志记录\r\n */\r\nfunction _reslog(res) {\r\n\tlet _statusCode = res.statusCode;\r\n\tif (process.env.NODE_ENV === 'development') {\r\n\t\t// console.log(\"【\" + res.config.requestId + \"】 地址：\" + res.config.url)\r\n\t\tif (res.config.data) {\r\n\t\t\t// console.log(\"【\" + res.config.requestId + \"】 请求参数：\" + JSON.stringify(res.config.data))\r\n\t\t}\r\n\t\t// console.log(\"【\" + res.config.requestId + \"】 响应结果：\" + JSON.stringify(res))\r\n\t}\r\n}\r\n"]}