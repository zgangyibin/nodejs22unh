{"version":3,"sources":["../../../../../../../src/views/front/components/zebra-swiper/libs/update/updateActiveIndex.js"],"names":["updateActiveIndex","newActiveIndex","swiper","translate","rtlTranslate","slidesGrid","snapGrid","params","previousIndex","activeIndex","previousRealIndex","realIndex","previousSnapIndex","snapIndex","i","length","normalizeSlideIndex","indexOf","skip","Math","min","slidesPerGroupSkip","floor","slidesPerGroup","loopedSlides","slides","filter","item","index","forEach","dataSwiperSlideIndex","emit","virtual","enabled","undefined","Object","assign","initialized","runCallbacksOnInit"],"mappings":"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","file":"updateActiveIndex.js","sourcesContent":["export default function updateActiveIndex(newActiveIndex) {\r\n\tconst swiper = this;\r\n\tconst translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n\tconst {\r\n\t\tslidesGrid,\r\n\t\tsnapGrid,\r\n\t\tparams,\r\n\t\tactiveIndex: previousIndex,\r\n\t\trealIndex: previousRealIndex,\r\n\t\tsnapIndex: previousSnapIndex\r\n\t} = swiper;\r\n\tlet activeIndex = newActiveIndex;\r\n\tlet snapIndex;\r\n\r\n\tif (typeof activeIndex === 'undefined') {\r\n\t\tfor (let i = 0; i < slidesGrid.length; i += 1) {\r\n\t\t\tif (typeof slidesGrid[i + 1] !== 'undefined') {\r\n\t\t\t\tif (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) /\r\n\t\t\t\t\t2) {\r\n\t\t\t\t\tactiveIndex = i;\r\n\t\t\t\t} else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\r\n\t\t\t\t\tactiveIndex = i + 1;\r\n\t\t\t\t}\r\n\t\t\t} else if (translate >= slidesGrid[i]) {\r\n\t\t\t\tactiveIndex = i;\r\n\t\t\t}\r\n\t\t} // Normalize slideIndex\r\n\r\n\r\n\t\tif (params.normalizeSlideIndex) {\r\n\t\t\tif (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tif (snapGrid.indexOf(translate) >= 0) {\r\n\t\tsnapIndex = snapGrid.indexOf(translate);\r\n\t} else {\r\n\t\tconst skip = Math.min(params.slidesPerGroupSkip, activeIndex);\r\n\t\tsnapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\r\n\t}\r\n\r\n\tif (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n\r\n\r\n\r\n\tif (swiper.loopedSlides) {\r\n\t\tswiper.slides.filter((item) => item.index >= swiper.loopedSlides && item.index < swiper.slides.length - swiper\r\n\t\t\t.loopedSlides).forEach((item, index) => {\r\n\t\t\titem.dataSwiperSlideIndex = item.index - swiper.loopedSlides;\r\n\t\t})\r\n\t\tswiper.slides.filter((item) => item.index < swiper.loopedSlides).forEach((item, index) => {\r\n\t\t\tif (swiper.slides[swiper.slides.length - swiper.loopedSlides * 3 + index]) {\r\n\t\t\t\titem.dataSwiperSlideIndex = swiper.slides[swiper.slides.length - swiper.loopedSlides * 3 +\r\n\t\t\t\t\t\tindex]\r\n\t\t\t\t\t.index;\r\n\t\t\t}\r\n\t\t})\r\n\t\tswiper.slides.filter((item) => item.index >= swiper.slides.length - swiper\r\n\t\t\t.loopedSlides).forEach((item, index) => {\r\n\t\t\titem.dataSwiperSlideIndex = swiper.slides[index].index;\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tif (activeIndex === previousIndex) {\r\n\t\tif (snapIndex !== previousSnapIndex) {\r\n\t\t\tswiper.snapIndex = snapIndex;\r\n\t\t\tswiper.emit('snapIndexChange');\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t} // Get real index\r\n\r\n\tlet realIndex;\r\n\tif (swiper.virtual && params.virtual.enabled) {\r\n\t\trealIndex = activeIndex;\r\n\t} else {\r\n\t\tif (swiper.slides[activeIndex].dataSwiperSlideIndex == undefined || swiper.slides[activeIndex]\r\n\t\t\t.dataSwiperSlideIndex == null) {\r\n\t\t\trealIndex = activeIndex;\r\n\t\t} else {\r\n\t\t\trealIndex = swiper.slides[activeIndex].dataSwiperSlideIndex;\r\n\t\t}\r\n\t}\r\n\tObject.assign(swiper, {\r\n\t\tsnapIndex,\r\n\t\trealIndex,\r\n\t\tpreviousIndex,\r\n\t\tactiveIndex\r\n\t});\r\n\tswiper.emit('activeIndexChange');\r\n\tswiper.emit('snapIndexChange');\r\n\r\n\tif (previousRealIndex !== realIndex) {\r\n\t\tswiper.emit('realIndexChange');\r\n\t}\r\n\r\n\tif (swiper.initialized || swiper.params.runCallbacksOnInit) {\r\n\t\tswiper.emit('slideChange', activeIndex);\r\n\t}\r\n}\n"]}