{"version":3,"sources":["../../src/api/Xuesheng.js"],"names":["config","db","api","all","req","res","pwd","query","password","XueshengModel","findOne","where","xuehao","username","mima","userinfo","toRes","session","token","jwt","sign","id","dataValues","role","loginUserColumn","tableName","jwtSecret","expiresIn","destroy","post","Object","keys","body","forEach","item","create","undefined","decode","headers","record","update","get","page","parseInt","limit","sort","order","indexOf","Op","like","eq","xueshengxingming","touxiang","xingbie","shoujihaoma","youxiang","findAndCountAll","offset","result","currPage","pageSize","in","params","sql","type","remindstart","columnName","remindend","remindStart","util","getDateTimeFormat","Number","remindEnd","sequelize","plain","raw","QueryTypes","SELECT","results","count","xColumnName","yColumnName","timeStatType","dbConnection","dbtype","toLowerCase"],"mappings":"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","file":"Xuesheng.js","sourcesContent":["import { Router } from 'express'\r\nimport { Op, QueryTypes } from 'sequelize'\r\nimport sequelize from '../models/sequelize'\r\nimport toRes from '../lib/toRes'\r\nimport XueshengModel from '../models/XueshengModel'\r\nimport util from '../lib/util'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport default ({ config, db }) => {\r\n\tlet api = Router()\r\n\r\n\t// 用户登录接口\r\n\tapi.all('/login', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet pwd = req.query.password\r\n\t\t\tlet userinfo = await XueshengModel.findOne({ where: { xuehao: req.query.username, mima: pwd } })\r\n\t\t\tif (userinfo === null) {\r\n\t\t\t\ttoRes.session(res, -1, '用户名或密码错误！')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tconst token = jwt.sign(//生成token\r\n\t\t\t\t{\r\n\t\t\t\t\tid: userinfo.dataValues.id,\r\n\t\t\t\t\tusername: userinfo.dataValues.xuehao,\r\n\t\t\t\t\trole: '学生',\r\n                    loginUserColumn: 'xuehao',\r\n                    tableName: 'xuesheng'\r\n\t\t\t\t},\r\n\t\t\t\tconfig.jwtSecret,\r\n\t\t\t\t{\r\n\t\t\t\t\texpiresIn: 60 * 60 * 24 * 1\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\tuserinfo.dataValues.token = token\r\n\t\t\tuserinfo.dataValues.role = '学生'\r\n\t\t\tuserinfo.dataValues.loginUserColumn = 'xuehao'\r\n\t\t\tuserinfo.dataValues.tableName = 'xuesheng'\r\n\t\t\tdelete userinfo.dataValues.mima\r\n\t\t\treq.session.userinfo = userinfo\r\n\r\n\t\t\ttoRes.session(res, 0, '登录成功！', token)\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 用户退出接口\r\n\tapi.all('/logout', (req, res) => {\r\n\t\t\r\n\t\treq.session.destroy(err => {\r\n\t\t\ttoRes.session(res, 0, '退出成功！')\r\n\t\t})\r\n\t})\r\n\r\n\t// 注册接口\r\n\tapi.post('/register', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tconst userinfo = await XueshengModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\t\t\t\ttoRes.session(res, -1, '注册失败！')\r\n\t\t\t} else {\r\n\t\t\t\ttoRes.session(res, 0, '注册成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, -2, '请检查是否正确输入或用户名重复！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取session接口\r\n\tapi.all('/session', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\ttoRes.record(res, 0, await XueshengModel.findOne({ where: { id: req.session.userinfo === undefined ? jwt.decode(req.headers.token).id : req.session.userinfo.id } }))\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 忘记密码（找回密码）\r\n\tapi.all('/resetPass', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n    \tlet pwd = '123456'\r\n\r\n\t\t\tawait XueshengModel.update({\r\n\t\t\t\tmima: pwd\r\n\t\t\t}, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  xuehao: req.query.username\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '密码已重置为：123456')\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 分页接口（后端）\r\n\tapi.get('/page', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet xuehao = req.query.xuehao\r\n\t\t\tif (xuehao) {//学号\r\n\r\n\t\t\t\tif (xuehao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.xuehao = {\r\n\t\t\t\t\t\t[Op.like]: xuehao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.xuehao = {\r\n\t\t\t\t\t\t[Op.eq]: xuehao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet mima = req.query.mima\r\n\t\t\tif (mima) {//密码\r\n\r\n\t\t\t\tif (mima.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.mima = {\r\n\t\t\t\t\t\t[Op.like]: mima\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.mima = {\r\n\t\t\t\t\t\t[Op.eq]: mima\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet xueshengxingming = req.query.xueshengxingming\r\n\t\t\tif (xueshengxingming) {//学生姓名\r\n\r\n\t\t\t\tif (xueshengxingming.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.xueshengxingming = {\r\n\t\t\t\t\t\t[Op.like]: xueshengxingming\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.xueshengxingming = {\r\n\t\t\t\t\t\t[Op.eq]: xueshengxingming\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet touxiang = req.query.touxiang\r\n\t\t\tif (touxiang) {//头像\r\n\r\n\t\t\t\tif (touxiang.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.touxiang = {\r\n\t\t\t\t\t\t[Op.like]: touxiang\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.touxiang = {\r\n\t\t\t\t\t\t[Op.eq]: touxiang\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet xingbie = req.query.xingbie\r\n\t\t\tif (xingbie) {//性别\r\n\r\n\t\t\t\tif (xingbie.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.xingbie = {\r\n\t\t\t\t\t\t[Op.like]: xingbie\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.xingbie = {\r\n\t\t\t\t\t\t[Op.eq]: xingbie\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet shoujihaoma = req.query.shoujihaoma\r\n\t\t\tif (shoujihaoma) {//手机号码\r\n\r\n\t\t\t\tif (shoujihaoma.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.shoujihaoma = {\r\n\t\t\t\t\t\t[Op.like]: shoujihaoma\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.shoujihaoma = {\r\n\t\t\t\t\t\t[Op.eq]: shoujihaoma\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet youxiang = req.query.youxiang\r\n\t\t\tif (youxiang) {//邮箱\r\n\r\n\t\t\t\tif (youxiang.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.youxiang = {\r\n\t\t\t\t\t\t[Op.like]: youxiang\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.youxiang = {\r\n\t\t\t\t\t\t[Op.eq]: youxiang\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet result = await XueshengModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 分页接口（前端）\r\n\tapi.get('/list', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet xuehao = req.query.xuehao\r\n\t\t\tif (xuehao) {\r\n\r\n\t\t\t\tif (xuehao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.xuehao = {\r\n\t\t\t\t\t\t[Op.like]: xuehao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.xuehao = {\r\n\t\t\t\t\t\t[Op.eq]: xuehao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet xueshengxingming = req.query.xueshengxingming\r\n\t\t\tif (xueshengxingming) {\r\n\r\n\t\t\t\tif (xueshengxingming.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.xueshengxingming = {\r\n\t\t\t\t\t\t[Op.like]: xueshengxingming\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.xueshengxingming = {\r\n\t\t\t\t\t\t[Op.eq]: xueshengxingming\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet result = await XueshengModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 401, '您的权限不够！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\t// 保存接口（后端）\r\n\tapi.post('/save', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\r\n\r\n\t\t\tconst userinfo = await XueshengModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 保存接口（前端）\r\n\tapi.post('/add', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tif (jwt.decode(req.headers.token) == null) {\r\n\t\t\t\ttoRes.session(res, 401, '请登录后再操作', '', 401)\r\n\t\t\t}\r\n\r\n\t\t\tconst userinfo = await XueshengModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 更新接口\r\n\tapi.post('/update', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\tawait XueshengModel.update(req.body, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: req.body.id || 0\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\ttoRes.session(res, 0, '编辑成功！')\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 删除接口\r\n\tapi.post('/delete', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tawait XueshengModel.destroy({\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: {\r\n\t\t\t\t\t[Op.in]: req.body\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\ttoRes.session(res, 0, '删除成功！')\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 详情接口（后端）\r\n\tapi.all('/info/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\ttoRes.record(res, 0, await XueshengModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 详情接口（前端）\r\n\tapi.all('/detail/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\ttoRes.record(res, 0, await XueshengModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取需要提醒的记录数接口\r\n\tapi.get('/remind/:columnName/:type', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = 'SELECT 0 AS count'\r\n\t\t\t\r\n\t\t\tif (req.params.type == 1) {\r\n\t\t\t\tif (req.query.remindstart) sql = \"SELECT COUNT(*) AS count FROM xuesheng WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"'\"\r\n\t\t\t\tif (req.query.remindend) sql = \"SELECT COUNT(*) AS count FROM xuesheng WHERE \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM xuesheng WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"' AND \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (req.params.type == 2) {\r\n\t\t\t\tif (req.query.remindstart) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM xuesheng WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"'\"\r\n\t\t\t\t}\r\n\t\t\t\tif (req.query.remindend) {\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM xuesheng WHERE \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM xuesheng WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"' AND \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst results = await sequelize.query(sql, {\r\n\t\t\t\tplain: true,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.count(res, 0, results.count)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\t// 分组统计接口\r\n\tapi.get('/group/:columnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet columnName = req.params.columnName\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tsql = \"SELECT COUNT(*) AS total, \" + columnName + \" FROM xuesheng \" + where + \" GROUP BY \" + columnName + \" LIMIT 10\" \r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 统计指定字段\r\n\tapi.get('/value/:xColumnName/:yColumnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tsql = \"SELECT \" + xColumnName + \", SUM(\" + yColumnName + \") AS total FROM xuesheng \" + where + \" GROUP BY \" + xColumnName + \" DESC LIMIT 10\"\r\n\t\t\t\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 按日期统计\r\n\tapi.get('/value/:xColumnName/:yColumnName/:timeStatType', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\tlet timeStatType = req.params.timeStatType\r\n\t\t\tlet tableName = \"xuesheng\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\r\n            if (config.dbConnection.dbtype.toLowerCase() == \"mysql\") {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m')  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y')  LIMIT 10\";\r\n            } else {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120)  LIMIT 10\";\r\n            }\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\treturn api\r\n}\r\n"]}